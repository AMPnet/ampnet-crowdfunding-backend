buildscript {
    ext {
        kotlinVersion = '1.3.0'
        springBootVersion = '2.1.0.RELEASE'
        junitVersion = '5.3.1'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.7")
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.asciidoctor.convert'

group = 'com.ampnet'
version = '0.0.1-SNAPSHOT'
description = "crowdfunding-backend"

bootJar {
    baseName = 'crowdfunding-backend'
    version =  '0.0.1'
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

asciidoctor {
    dependsOn test
    attributes 'snippets': file('build/generated-snippets')
}

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    ktlint
}

test {
    useJUnitPlatform()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile('org.springframework.boot:spring-boot-starter-mail')
    kapt "org.springframework.boot:spring-boot-configuration-processor"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"

    compile("org.springframework.social:spring-social-facebook:2.0.3.RELEASE")
    compile('org.springframework.social:spring-social-google:1.0.0.RC1')

    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile('com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7')
    compile('io.jsonwebtoken:jjwt-jackson:0.10.5')
    runtime('io.jsonwebtoken:jjwt-impl:0.10.5')
    compile('org.flywaydb:flyway-core:5.2.1')
    compile('org.postgresql:postgresql:42.2.5')
    compile('org.passay:passay:1.3.1')
    compile('io.github.microutils:kotlin-logging:1.6.20')
    compile('org.web3j:core:4.0.0')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testCompile("org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testCompile('org.mockito:mockito-core:2.23.0')
    testCompile('org.subethamail:subethasmtp:3.1.7')

    ktlint "com.github.shyiko:ktlint:0.29.0"
}
compileJava.dependsOn(processResources)

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
